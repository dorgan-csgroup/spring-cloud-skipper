# Worker which is dispatched from build-snapshot-controller workflow.
name: Build Snapshot Worker

on:
  workflow_dispatch:
    inputs:
      build-zoo-handler:
        description: 'Build Zoo Handler Payload'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - uses: jvalkeal/setup-maven@v1
      with:
        maven-version: 3.6.3
    - uses: jfrog/setup-jfrog-cli@v1
      with:
        version: 1.46.4
      env:
        JF_ARTIFACTORY_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}
    - name: Install pack
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        pack-version: 0.18.0

    # cache maven .m2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2-

    # target deploy repos
    - name: Configure JFrog Cli
      run: |
        jfrog rt mvnc \
          --server-id-resolve=repo.spring.io \
          --server-id-deploy=repo.spring.io \
          --repo-resolve-releases=libs-release \
          --repo-resolve-snapshots=libs-snapshot \
          --repo-deploy-releases=release \
          --repo-deploy-snapshots=snapshot
        echo JFROG_CLI_BUILD_NAME=spring-cloud-skipper-27x >> $GITHUB_ENV
        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

    # zoo extract and ensure
    - name: Extract Zoo Context Properties
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-extract-context-properties: true

    # build and publish to configured target
    - name: Build and Publish
      run: |
        jfrog rt mvn -U -B clean install
        jfrog rt mvn clean install \
          -Pfull,asciidoctordocs \
          -U -B
        jfrog rt build-publish
        echo BUILD_ZOO_HANDLER_spring_cloud_skipper_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_skipper_buildname=spring-cloud-skipper-27x >> $GITHUB_ENV
        echo BUILD_ZOO_HANDLER_spring_cloud_skipper_buildnumber=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

    # build image to local repo to get pushed
    - name: Build Image
      env:
        TAG: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}
      run: |
        pack build \
          --path spring-cloud-skipper-server/target/spring-cloud-skipper-server-$TAG.jar \
          --builder gcr.io/paketo-buildpacks/builder:0.1.99-base \
          --env BP_JVM_VERSION=8 springcloud/spring-cloud-skipper-server:$TAG-jdk8
        pack build \
          --path spring-cloud-skipper-server/target/spring-cloud-skipper-server-$TAG.jar \
          --builder gcr.io/paketo-buildpacks/builder:0.1.99-base \
          --env BP_JVM_VERSION=11 springcloud/spring-cloud-skipper-server:$TAG-jdk11

    # docker hub login
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # push image
    - name: Push image
      env:
        TAG: ${{ env.BUILD_ZOO_HANDLER_spring_cloud_skipper_version }}
      run: |
        docker push springcloud/spring-cloud-skipper-server:$TAG-jdk8
        docker push springcloud/spring-cloud-skipper-server:$TAG-jdk11
        docker tag springcloud/spring-cloud-skipper-server:$TAG-jdk11 springcloud/spring-cloud-skipper-server:$TAG
        docker push springcloud/spring-cloud-skipper-server:$TAG

    # zoo success
    - name: Notify Build Success Zoo Handler Controller
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-succeed"
          }

    # zoo failure
    - name: Notify Build Failure Zoo Handler Controller
      if: ${{ failure() }}
      uses: jvalkeal/build-zoo-handler@v0.0.4
      with:
        dispatch-handler-token: ${{ secrets.SCDF_ACCESS_TOKEN }}
        dispatch-handler-client-payload-data: >
          {
            "event": "build-failed",
            "message": "spring-cloud-skipper failed"
          }
    # clean m2 cache
    - name: Clean cache
      run: |
        find ~/.m2/repository -type d -name '*SNAPSHOT' | xargs rm -fr
